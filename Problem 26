//26. Remove Duplicates from Sorted Array. Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.

#include <iostream>
#include <vector>
using namespace std;


int removeDuplicates(vector<int>& nums) {
    int n = nums[0];
    int size = 1;
    int i = 1;
    vector<int>::iterator it = nums.begin();
    while (i < nums.size()){
        if (n != nums[i]){
            size++;
            n = nums[i];
            i++;
        } else {
            nums.erase(it+i);
        }
    }
    return size;
}

void printV (vector<int>& v, int n){
    for (int i = 0; i < n; i++){
        cout << v[i]<< " ";
    }
};

int main() {
    int k;
    vector<int> digits;
    digits.push_back(7);
    digits.push_back(7);
    digits.push_back(9);
    k = removeDuplicates(digits);
    cout << k<< endl;
    printV(digits, digits.size());

    return 0;
}
